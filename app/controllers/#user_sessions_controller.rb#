class UserSessionsController < ApplicationController
  
  before_filter :require_no_user, :only => [:new, :create]
  before_filter :require_user, :only => [:destroy, :show]
  
  def new
    user_session = UserSession.new
  end
 
  def create
        
    if (params[:name].blank? || params[:password].blank?) && params[:remember_token].blank?
      render :json => {message: "vacio"}, :status => 401
    else
      
      # the user is still authenticated in the ember app
      if params[:remember_token].present?
        user = User.find_by_single_access_token(params[:remember_token])
        user_session = UserSession.create(user) unless user.blank?
      else
        user_session = UserSession.new({
                                         :name => params[:name],
                                         :password => params[:password],
                                         :remember_me => '1'
                                       })
      end
      
      if user_session && user_session.save
        # reset their single access token
        current_user.reset_single_access_token! unless params[:remember_token].present?
        data = {
          :auth_token => current_user.single_access_token,
          :user_id => current_user.id,
          :user_session => current_user_session.to_compact_user_session
        }
        if params[:remember_me]
          data[:remember_token] = current_user.single_access_token
        end
        # I'm only using user_session to authenticate them the first time
        # we don't want Authlogic persisting the user session
        user_session.destroy			 
        # return 'auth_token', 'user_id', and 'remember_token' (if they checked "remember me")
        render :json => data, :status => 201
      else
        render :json => {'errors' => user_session.errors}, :status => 401
      end
    end
  end
 
  def show
        render :json => {'user_session' => current_user_session.to_compact_user_session}
  end
 
  def destroy
    current_user_session.destroy
    render :json => {:success => true, :message => 'logout succesful!'}, :status => :ok 
  end
end

